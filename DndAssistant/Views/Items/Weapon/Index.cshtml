@model IEnumerable<DndAssistant.Models.Items.Weapon>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table id="weaponTable" class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Damage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Weight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cost)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsMartial)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsRanged)
            </th>
           


            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Damage.DiceCount)
                    @Html.DisplayFor(modelItem => item.Damage.DiceType)
                    @Html.DisplayFor(modelItem => item.Damage.DamageType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Weight) фнт.
                </td>
                <td>
                    @{
                        var money = "";
                        if (item.Cost.Gold > 0)
                        {
                            money += $"{item.Cost.Gold} зм ";
                        }
                        if (item.Cost.Silver > 0)
                        {
                            money += $"{item.Cost.Silver} см ";
                        }
                        if (item.Cost.Copper > 0)
                        {
                            money += $"{item.Cost.Copper} мм ";
                        }
                        money = money.Trim();
                    }
                    
                    @money
                </td>
                <td>
                    @if (item.IsMartial)
                    {
                        @:Воинское
                    }
                    else
                    {
                        @:Простое
                    }
                </td>
                <td>
                    @if (item.IsRanged)
                    {
                        @:Дальнобойное
                    }
                    else
                    {
                        @:Рукопашное
                    }
                </td>
                

                <td>
                    @{
                        var result = "";

                        @if (item.IsAmmunition)
                        {
                            result += Html.DisplayNameFor(model => model.IsAmmunition) + " ";
                        }
                        @if (item.IsThrown)
                        {
                            result += Html.DisplayNameFor(model => model.IsThrown) + " ";
                        }
                        @if (item.IsAmmunition || item.IsThrown)
                        {
                            result += (item.RangeNormal.HasValue && item.RangeLong.HasValue
                            ? $"({item.RangeNormal}/{item.RangeLong}) "
                            : "");
                        }
                        @if (item.IsLight)
                        {
                            result += Html.DisplayNameFor(model => model.IsLight) + " ";
                        }
                        @if (item.IsTwoHanded)
                        {
                            result += Html.DisplayNameFor(model => model.IsTwoHanded) + " ";
                        }
                        @if (item.RequiresReload)
                        {
                            result += Html.DisplayNameFor(model => model.RequiresReload) + " ";
                        }
                        @if (item.HasReach)
                        {
                            result += Html.DisplayNameFor(model => model.HasReach) + " ";
                        }
                        @if (item.IsHeavy)
                        {
                            result += Html.DisplayNameFor(model => model.IsHeavy) + " ";
                        }
                        @if (item.IsFinesse)
                        {
                            result += Html.DisplayNameFor(model => model.IsFinesse) + " ";
                        }
                        @if (item.IsSpecial)
                        {
                            result += Html.DisplayNameFor(model => model.IsSpecial) + " ";
                        }
                        @if (item.IsVersatile)
                        {
                            result += Html.DisplayNameFor(model => model.IsVersatile) + " ";
                            if (item.IsVersatile)
                            {
                                result += $"({item.Damage.DiceCount}{item.DamageTwoHandedVersatile})";
                            }
                        }

                        // Trim to remove any trailing spaces
                        result = result.Trim();
                    }

                    @result
                    
                </td>

                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    new DataTable('#weaponTable', {
        "paging": false,  // Если вам не нужна пагинация
        "searching": true,  // Если вам нужен поиск
        "ordering": true,  // Включение сортировки
        "info": true,  // Если не нужно отображать информацию о таблице\
        columnDefs: [
            { orderable: false, targets: 7 } // Disable sorting for the 5th column (0-based index)
        ]
    });
</script>
